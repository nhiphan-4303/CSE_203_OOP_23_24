/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package frame;

import java.awt.event.*;
import java.beans.Statement;
import java.io.*;
import static java.lang.Character.isDigit;
import java.util.*;
import javax.swing.*;
import javax.swing.table.*;
import model.Customer;
import model.ManageCustomer;

/**
 *
 * @author maianhtran
 */
public class CustomerFrame extends javax.swing.JDialog {

    /**
     * Creates new form CustomerFrame
     */
    Scanner sc = new Scanner(System.in);
    java.awt.event.ActionEvent evt;
    ManageCustomer manageCustomer = new ManageCustomer();

    public CustomerFrame(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        customerTable.setDefaultEditor(Object.class, null);
        this.setLocationRelativeTo(null);

        loadCustomers();
        fillInCustomerTable();
        DeleteCustomer();
        customerTable.putClientProperty("JTable.autoStartsEdit", Boolean.FALSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        backButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        customerTable = new javax.swing.JTable();
        customerIDField = new javax.swing.JTextField();
        fullNameField = new javax.swing.JTextField();
        phoneNumberField = new javax.swing.JTextField();
        addressField = new javax.swing.JTextField();
        emailField = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        totalButton = new javax.swing.JButton();
        phoneNumJLabel = new javax.swing.JLabel();
        emailJLabel = new javax.swing.JLabel();
        cusNameJLabel = new javax.swing.JLabel();
        addressJLabel = new javax.swing.JLabel();
        cusIdJLabel = new javax.swing.JLabel();
        searchField = new javax.swing.JTextField();
        changeJLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Customer Information");
        setBackground(new java.awt.Color(0, 0, 0));

        jPanel5.setBackground(new java.awt.Color(187, 234, 221));

        backButton.setBackground(new java.awt.Color(0, 153, 153));
        backButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        backButton.setForeground(new java.awt.Color(255, 255, 255));
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        customerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer ID", "Full name", "Phone number", "Address", "Email"
            }
        ));
        customerTable.setGridColor(new java.awt.Color(255, 255, 255));
        customerTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customerTableMouseClicked(evt);
            }
        });
        customerTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                customerTableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(customerTable);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        customerIDField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(139, 139, 221), 3, true));

        fullNameField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(139, 139, 221), 3, true));
        fullNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fullNameFieldActionPerformed(evt);
            }
        });

        phoneNumberField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(139, 139, 221), 3, true));
        phoneNumberField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneNumberFieldActionPerformed(evt);
            }
        });

        addressField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(139, 139, 221), 3, true));
        addressField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressFieldActionPerformed(evt);
            }
        });

        emailField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(139, 139, 221), 3, true));

        addButton.setBackground(new java.awt.Color(0, 153, 153));
        addButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        addButton.setForeground(new java.awt.Color(255, 255, 255));
        addButton.setText("Add");
        addButton.setBorder(null);
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        clearButton.setBackground(new java.awt.Color(0, 153, 153));
        clearButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        clearButton.setForeground(new java.awt.Color(255, 255, 255));
        clearButton.setText("Clear");
        clearButton.setBorder(null);
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        saveButton.setBackground(new java.awt.Color(0, 153, 153));
        saveButton.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        saveButton.setForeground(new java.awt.Color(255, 255, 255));
        saveButton.setText("Save");
        saveButton.setBorder(null);
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        totalButton.setBackground(new java.awt.Color(0, 153, 153));
        totalButton.setFont(new java.awt.Font("Gurmukhi MN", 1, 18)); // NOI18N
        totalButton.setForeground(new java.awt.Color(255, 255, 255));
        totalButton.setText("Total");
        totalButton.setBorder(null);
        totalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalButtonActionPerformed(evt);
            }
        });

        phoneNumJLabel.setFont(new java.awt.Font("Segoe UI Symbol", 1, 18)); // NOI18N
        phoneNumJLabel.setForeground(new java.awt.Color(139, 139, 221));
        phoneNumJLabel.setText("Phone Number");

        emailJLabel.setFont(new java.awt.Font("Segoe UI Symbol", 1, 18)); // NOI18N
        emailJLabel.setForeground(new java.awt.Color(139, 139, 221));
        emailJLabel.setText("Email");

        cusNameJLabel.setFont(new java.awt.Font("Segoe UI Symbol", 1, 18)); // NOI18N
        cusNameJLabel.setForeground(new java.awt.Color(139, 139, 221));
        cusNameJLabel.setText("Full Name");

        addressJLabel.setFont(new java.awt.Font("Segoe UI Symbol", 1, 18)); // NOI18N
        addressJLabel.setForeground(new java.awt.Color(139, 139, 221));
        addressJLabel.setText("Address");

        cusIdJLabel.setFont(new java.awt.Font("Segoe UI Symbol", 1, 18)); // NOI18N
        cusIdJLabel.setForeground(new java.awt.Color(139, 139, 221));
        cusIdJLabel.setText("Customer ID");

        searchField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        searchField.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(139, 139, 221), 3, true));
        searchField.setCaretColor(new java.awt.Color(255, 255, 255));
        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });
        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchFieldKeyReleased(evt);
            }
        });

        changeJLabel.setFont(new java.awt.Font("Segoe UI Symbol", 1, 18)); // NOI18N
        changeJLabel.setForeground(new java.awt.Color(139, 139, 221));
        changeJLabel.setText("Search");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(changeJLabel)
                        .addGap(18, 18, 18)
                        .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cusNameJLabel)
                                    .addComponent(addressJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(emailJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(phoneNumJLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(customerIDField, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                                    .addComponent(fullNameField)
                                    .addComponent(phoneNumberField)
                                    .addComponent(addressField)
                                    .addComponent(emailField)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(cusIdJLabel)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(totalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17))))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(backButton)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(backButton)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(customerIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(cusIdJLabel)
                                .addGap(33, 33, 33)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cusNameJLabel)
                                    .addComponent(fullNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(phoneNumJLabel)
                            .addComponent(phoneNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addressJLabel)
                            .addComponent(addressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(emailJLabel)
                            .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(totalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(changeJLabel)
                            .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(62, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        clearButton();

    }//GEN-LAST:event_clearButtonActionPerformed

    private void phoneNumberFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneNumberFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneNumberFieldActionPerformed

    private void totalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalButtonActionPerformed
        JOptionPane.showMessageDialog(this, "There are " + manageCustomer.getListCustomer().size() + " customers.");
    }//GEN-LAST:event_totalButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        String customerID = customerIDField.getText();
        String fullName = fullNameField.getText();
        String address = addressField.getText();
        String phoneNumber = phoneNumberField.getText();
        String email = emailField.getText();

        try {
            int phone = Integer.parseInt(phoneNumber);

            if (fullName.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Full name cannot be empty.");
                fullNameField.requestFocus();
                return;
            } else if (customerID.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Customer ID cannot be empty.");
                customerIDField.requestFocus();
                return;
            }

            Customer c = new Customer(customerID, fullName, address, phone, email);

            if (manageCustomer.searchCustomerByID(c)) {
                manageCustomer.getListCustomer().add(c);
                JOptionPane.showMessageDialog(this, "Adding customer successful.");
                saveCustomers();
                clearButton();
            } else {
                JOptionPane.showMessageDialog(this, "Customert ID is already exist.");
            }

        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Phone number must be numbers.");
            phoneNumberField.requestFocus();
        }
        fillInCustomerTable();
    }//GEN-LAST:event_addButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_backButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) customerTable.getModel();

        int selectedRow = customerTable.getSelectedRow();

        if (selectedRow != -1) {
            String customerID = customerIDField.getText();
            Customer customerToEdit = manageCustomer.findCustomer(customerID); // Corrected method to find a customer

            if (customerToEdit != null) {
                try {
                    int phone = Integer.parseInt(phoneNumberField.getText()); // Ensure parsing is done before setting
                    customerToEdit.setCustomerName(fullNameField.getText());
                    customerToEdit.setPhoneNumber(phone);
                    customerToEdit.setAddress(addressField.getText());
                    customerToEdit.setEmail(emailField.getText());

                    // Updating model values should be within the try block after successful parsing
                    model.setValueAt(customerToEdit.getCustomerName(), selectedRow, 1);
                    model.setValueAt(customerToEdit.getPhoneNumber(), selectedRow, 2);
                    model.setValueAt(customerToEdit.getAddress(), selectedRow, 3);
                    model.setValueAt(customerToEdit.getEmail(), selectedRow, 4);

                    saveCustomers(); // Assumes this method correctly serializes the updated list to a file

                    JOptionPane.showMessageDialog(this, "Customer information updated successfully.");
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(this, "Invalid phone number format. Please enter a valid number.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Error: Customer not found.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "No customer selected to edit.");
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void fullNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fullNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fullNameFieldActionPerformed

    private void addressFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressFieldActionPerformed

    private void searchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyReleased
        DefaultTableModel model = (DefaultTableModel) customerTable.getModel();
        String searchText = searchField.getText().trim();
        ArrayList<Customer> searchResults = doSearch(searchText);
        model.setRowCount(0);

        for (Customer c : searchResults) {
            Object[] rows = {c.getCustomerID(), c.getCustomerName(), c.getPhoneNumber(), c.getAddress(), c.getEmail()};
            model.addRow(rows);
        }
    }//GEN-LAST:event_searchFieldKeyReleased

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFieldActionPerformed

    private void customerTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_customerTableKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_customerTableKeyReleased

    private void customerTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerTableMouseClicked
        getDataFromTable();
    }//GEN-LAST:event_customerTableMouseClicked

    private void DeleteCustomer() {
        DefaultTableModel model = (DefaultTableModel) customerTable.getModel();

        customerTable.addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {
            }

            @Override
            public void keyPressed(KeyEvent e) {
            }

            @Override
            public void keyReleased(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_DELETE) {
                    int selectedRow = customerTable.getSelectedRow();
                    if (selectedRow != -1) {
                        int choice = JOptionPane.showConfirmDialog(null, "Do you want to delete this customer?",
                                "Confirmation", JOptionPane.YES_NO_OPTION);
                        if (choice == JOptionPane.YES_OPTION) {
                            manageCustomer.getListCustomer().remove(selectedRow);

                        }
                        saveCustomers();
                        fillInCustomerTable();
                    }
                }

            }
        });
    }

    private ArrayList<Customer> doSearch(String searchText) {
        ArrayList<Customer> searchResults = new ArrayList<>();
        for (Customer c : manageCustomer.getListCustomer()) {
            String phone = Integer.toString(c.getPhoneNumber());
            if (c.getCustomerName().toLowerCase().contains(searchText.toLowerCase())
                    || phone.contains(searchText)) {
                searchResults.add(c);
            }
        }
        return searchResults;

    }

    private void getDataFromTable() {
        DefaultTableModel model = (DefaultTableModel) customerTable.getModel();

        int selectedRow = customerTable.getSelectedRow();
        Customer c = manageCustomer.getListCustomer().get(selectedRow);
        fullNameField.setText(c.getCustomerName().toString());
        phoneNumberField.setText(String.valueOf(c.getPhoneNumber()));
        addressField.setText(c.getAddress());
        emailField.setText(c.getEmail());
    }

    private void fillInCustomerTable() {
        DefaultTableModel model = (DefaultTableModel) customerTable.getModel();
        int rowCount = model.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        for (Customer c : manageCustomer.getListCustomer()) {
            Object[] rows = new Object[]{c.getCustomerID(), c.getCustomerName(), c.getPhoneNumber(), c.getAddress(), c.getEmail()};
            model.addRow(rows);
        }

        pack();
    }

    private void clearButton() {
        customerIDField.setText("");
        fullNameField.setText("");
        addressField.setText("");
        phoneNumberField.setText("");
        emailField.setText("");
    }

    private void saveCustomers() {
        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream("Customers.Dat"))) {
            oos.writeObject(manageCustomer.getListCustomer());
            //JOptionPane.showMessageDialog(this, "Customers saved successfully!");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error saving customers to file.");
        }
    }

    private void loadCustomers() {
        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream("Customers.Dat"))) {
            manageCustomer.setListCustomer((ArrayList<Customer>) ois.readObject());

        } catch (IOException | ClassNotFoundException e) {
            JOptionPane.showMessageDialog(this, "Error loading customers from file.");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CustomerFrame dialog = new CustomerFrame(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JTextField addressField;
    private javax.swing.JLabel addressJLabel;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel changeJLabel;
    private javax.swing.JButton clearButton;
    private javax.swing.JLabel cusIdJLabel;
    private javax.swing.JLabel cusNameJLabel;
    private javax.swing.JTextField customerIDField;
    private javax.swing.JTable customerTable;
    private javax.swing.JTextField emailField;
    private javax.swing.JLabel emailJLabel;
    private javax.swing.JTextField fullNameField;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel phoneNumJLabel;
    private javax.swing.JTextField phoneNumberField;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField searchField;
    private javax.swing.JButton totalButton;
    // End of variables declaration//GEN-END:variables
}
